import random
import requests
import telebot
import datetime
from telebot import types
from pycoingecko import CoinGeckoAPI

url = 'http://api.openweathermap.org/data/2.5/weather'
cg = CoinGeckoAPI()
api_weather = '59e6f736d88244f7d6010be2894a4a89'
api_telegram = '1446950318:AAENEu41unb4y8RZK5Y_RctTCstO40wrv38'
bot = telebot.TeleBot("1446950318:AAENEu41unb4y8RZK5Y_RctTCstO40wrv38")
kost_list = ['CAACAgIAAxkBAAEB6x5gNszBk2bIv3Ee4VDnSyPWdM8jzgAC3MYBAAFji0YMsbUSFEouGv8eBA',
             'CAACAgIAAxkBAAEB6yBgNs04EirgTD1TG5t1ao2-1tocbQAC3cYBAAFji0YM608pO-wjAlEeBA',
             'CAACAgIAAxkBAAEB6yJgNs1onI2TuU0qwXhdksh99yq3ywAC3sYBAAFji0YMVHH9hav7ILkeBA',
             'CAACAgIAAxkBAAEB6yRgNs2m_eX4iOUf_SXBoYWB4syMqQAC38YBAAFji0YMHEUTINW7YxceBA',
             'CAACAgIAAxkBAAEB6yZgNs295-SIrggzRpAGctf4TDk5wgAC4MYBAAFji0YMSLHz-sj_JqkeBA',
             'CAACAgIAAxkBAAEB6yhgNs3O6Jvc6z_XdkSv7h8dgwfd4AAC4cYBAAFji0YM75p8zae_tHoeBA']
monetka = ["–û—Ä—ë–ª","–†–µ—à–∫–∞"]

# —Ö—Ä–∞–Ω–µ–Ω–∏e id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
joinedFile = open("joined.txt", "r")
joinedUsers = set()
for line in joinedFile:
    joinedUsers.add(line.strip())
joinedFile.close()
# –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ 1
main_keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
item1 = types.KeyboardButton("‚ùì–†–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ‚ùì")
item2 = types.KeyboardButton("‚òÇ–ü–æ–≥–æ–¥–∞‚òÇ")
item3 = types.KeyboardButton("üé≤–ö–æ—Å—Ç—åüé≤")
item4 = types.KeyboardButton("üíµ–ö—É—Ä—Åüíµ")
item5 = types.KeyboardButton("–ú–æ–Ω–µ—Ç–∫–∞")
main_keyboard.add(item3, item1, item2, item4, item5)


@bot.message_handler(commands=['start'])
def welcome(message):
    bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç, —è –∫ —Ç–≤–æ–∏–º —É—Å–ª—É–≥–∞–º ' + str(
        message.from_user.username) + ',' + '\n' + '—á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –∫–∞–∫ —Ç—ã –º–æ–∂–µ—à—å –º–µ–Ω—è —ç–∫—Å–ø–ª—É–∞—Ç–∏—Ä–æ–≤–∞—Ç—å –Ω–∞–±–µ—Ä–∏\n/help')
    if not str(message.chat.id) in joinedUsers:
        joinedFile = open("joined.txt", "a")
        joinedFile.write(str(message.chat.id) + "\n")
        joinedUsers.add(message.chat.id)


@bot.message_handler(commands=['admin'])
def secret(message):
    bot.send_message(message.chat.id, "–¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Å–µ–∫—Ä–µ—Ç–Ω–æ–µ –º–µ–Ω—é\n"
                                      "—á—Ç–æ–±—ã –¥–æ–∫–∞–∑–∞—Ç—å –∫—Ç–æ —Ç—É—Ç —Ü–∞—Ä—å, –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ <–∞–¥–º–∏–Ω>\n"
                                      "–µ—Å–ª–∏ –Ω–∞–¥–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤—Å–µ–º —É—á–∞—Å—Ç–Ω–∏–∫–∞–º /all <—Ç–µ–∫—Å—Ç>\n")


@bot.message_handler(commands=['kurs'])
def kurs(message):
    price = cg.get_price(ids='bitcoin', vs_currencies='usd,rub')
    bot.send_message(message.chat.id, '–ö—É—Ä—Å BTC' + ' ' + str(price['bitcoin']['usd']) + '$' + '\n'
                                                                                              '–ö—É—Ä—Å –∫ —Ä—É–±–ª—é' + ' ' + str(
        price['bitcoin']['rub']) + '‚ÇΩ')


@bot.message_handler(commands=['tools'])
def tools(message):
    bot.send_message(message.chat.id, '–≤–æ—Ç —á—Ç–æ –µ—â—ë —è —É–º–µ—é', reply_markup=main_keyboard)


@bot.message_handler(commands=['date'])
def date(message):
    today = datetime.datetime.today()
    bot.send_message(message.chat.id, '–°–µ–π—á–∞—Å -' + ' ' + today.strftime("%d/%m/%Y-%H:%M:%S"))


@bot.message_handler(commands=['all'])
def messall(message):
    for user in joinedUsers:
        bot.send_message(user, message.text[message.text.find(' '):])


@bot.message_handler(commands=['help'])
def help(message):
    bot.send_message(message.chat.id,
                     '/start –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞.\n'
                     '/help –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞.\n'
                     '/weather <–∏–º—è –≥–æ—Ä–æ–¥–∞> –ü–æ–≥–æ–¥–∞ –≤ –ª—é–±–æ–º –≥–æ—Ä–æ–¥–µ.\n'
                     '–Ω–∞–ø–∏—à–∏ –º–Ω–µ <–ö–æ—Å—Ç—å> –∏ –ø—Ä–æ–≤–µ—Ä—å —Å–≤–æ—é —É–¥–∞—á—É.\n'
                     '/tools —Ä–∞—Å–∫—Ä—ã–≤–∞–µ—Ç –≤—Å–µ –º–æ–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏.\n'
                     '—á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç—ã —Å–æ–∑–¥–∞—Ç–µ–ª—è –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ –º–Ω–µ <–ö–æ–Ω—Ç–∞–∫—Ç—ã>.\n'
                     '–ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å id –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –±–æ—Ç–∞ –Ω–∞–ø–∏—à–∏ <Users>.\n'
                     '/date —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —Ç–æ—á–Ω—É—é –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è.\n'
                     '/kurs –µ—Å–ª–∏ —Ö–æ—á–µ—à—å —É–∑–Ω–∞—Ç—å –∫—É—Ä—Å –±–∏—Ç–∫–æ–∏–Ω–∞.')
    bot.send_message(message.chat.id, '–≤–æ—Ç —á—Ç–æ –µ—â—ë —è —É–º–µ—é', reply_markup=main_keyboard)


@bot.message_handler(commands=['weather'])
def pogoda(message):
    city_name = message.text[9:]

    try:
        params = {'APPID': api_weather, 'q': city_name, 'units': 'metric', 'lang': 'ru'}
        result = requests.get(url, params=params)
        weather = result.json()

        if weather["main"]['temp'] < 10:
            status = "–°–µ–π—á–∞—Å —Ö–æ–ª–æ–¥–Ω–æ!"
        elif weather["main"]['temp'] < 20:
            status = "–°–µ–π—á–∞—Å –ø—Ä–æ—Ö–ª–∞–¥–Ω–æ!"
        elif weather["main"]['temp'] > 38:
            status = "–°–µ–π—á–∞—Å –∂–∞—Ä–∫–æ!"
        else:
            status = "–°–µ–π—á–∞—Å –æ—Ç–ª–∏—á–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞!"

        bot.send_message(message.chat.id, "–í –≥–æ—Ä–æ–¥–µ " + str(weather["name"]) + " —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ " + str(
            float(weather["main"]['temp'])) + "\n" +
                         "–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ " + str(float(weather['main']['temp_max'])) + "\n" +
                         "–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ " + str(float(weather['main']['temp_min'])) + "\n" +
                         "–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞ " + str(float(weather['wind']['speed'])) + "\n" +
                         "–î–∞–≤–ª–µ–Ω–∏–µ " + str(float(weather['main']['pressure'])) + "\n" +
                         "–í–ª–∞–∂–Ω–æ—Å—Ç—å " + str(int(weather['main']['humidity'])) + "%" + "\n" +
                         "–í–∏–¥–∏–º–æ—Å—Ç—å " + str(weather['visibility']) + "\n" +
                         "–û–ø–∏—Å–∞–Ω–∏–µ " + str(weather['weather'][0]["description"]) + "\n\n" + status)

    except:
        bot.send_message(message.chat.id, "–¢—ã —Ç–æ—á–Ω–æ —Å —ç—Ç–æ–π –ø–ª–∞–Ω–µ—Ç—ã?")


@bot.message_handler(content_types=['text'])
def send_text(message):
    if message.text == '–ü—Ä–∏–≤–µ—Ç':
        bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç!')
    elif message.text == '–ú–æ–Ω–µ—Ç–∫–∞':
        bot.send_message(message.chat.id, str(random.choice(monetka)))
    elif message.text == 'Users':
        file = open('joined.txt', 'rb')
        bot.send_document(message.chat.id, file)
    elif message.text == 'üíµ–ö—É—Ä—Åüíµ':
        price = cg.get_price(ids='bitcoin', vs_currencies='usd,rub')
        bot.send_message(message.chat.id, '–ö—É—Ä—Å BTC' + ' ' + str(price['bitcoin']['usd']) + '$' + '\n'
                                                                                                  '–ö—É—Ä—Å –∫ —Ä—É–±–ª—é' + ' ' + str(
            price['bitcoin']['rub']) + '‚ÇΩ')

    elif message.text == '‚ùì–†–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ‚ùì':
        bot.send_message(message.chat.id, str(random.randint(0, 100)))
    # –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞2
    elif message.text == '‚òÇ–ü–æ–≥–æ–¥–∞‚òÇ':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        item1 = types.KeyboardButton("–ú–æ—Å–∫–≤–∞")
        item2 = types.KeyboardButton("–û–∂–µ—Ä–µ–ª—å–µ")
        item3 = types.KeyboardButton('–ù–∞–∑–∞–¥')
        markup.add(item1, item2, item3)
        bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –ì–æ—Ä–æ–¥', reply_markup=markup)
    elif message.text == '–ü–æ–∫–∞':
        bot.send_message(message.chat.id, '–î–æ –Ω–æ–≤—ã—Ö –≤—Å—Ç—Ä–µ—á')
    elif message.text == '–ù–∞–∑–∞–¥':
        bot.send_message(message.chat.id, '–±—É–ª—å–∫', reply_markup=main_keyboard)
    elif message.text == '–ö–æ–Ω—Ç–∞–∫—Ç—ã':
        inkeyboard = types.InlineKeyboardMarkup()
        url_button = types.InlineKeyboardButton(text="–í–∫–æ–Ω—Ç–∞–∫—Ç–µ", url="https://vk.com/id202450991")
        url_button1 = types.InlineKeyboardButton(text="–¢–µ–ª–µ–≥—Ä–∞–º–º", url="https://web.telegram.org/#/im?p=@SOGARDERED")
        inkeyboard.add(url_button, url_button1)
        bot.send_message(message.chat.id, "–ö–æ–Ω—Ç–∞–∫—Ç—ã —Å–æ–∑–¥–∞—Ç–µ–ª—è", reply_markup=inkeyboard)
    elif message.text == '–Ø —Ç–µ–±—è –ª—é–±–ª—é':
        bot.send_sticker(message.chat.id, 'CAADAgADZgkAAnlc4gmfCor5YbYYRAI')
    elif message.text == 'üé≤–ö–æ—Å—Ç—åüé≤':
        bot.send_sticker(message.chat.id, str(random.choice(kost_list)))
    elif message.text == '–ê–¥–º–∏–Ω':
        bot.send_message(message.chat.id, '–≠—Ç–æ –∞–¥–º–∏–Ω')
    elif message.text == '–ú–æ—Å–∫–≤–∞':
        city_name = '–ú–æ—Å–∫–≤–∞'
        try:
            params = {'APPID': api_weather, 'q': city_name, 'units': 'metric', 'lang': 'ru'}
            result = requests.get(url, params=params)
            weather = result.json()

            if weather["main"]['temp'] < 10:
                status = "–°–µ–π—á–∞—Å —Ö–æ–ª–æ–¥–Ω–æ!"
            elif weather["main"]['temp'] < 20:
                status = "–°–µ–π—á–∞—Å –ø—Ä–æ—Ö–ª–∞–¥–Ω–æ!"
            elif weather["main"]['temp'] > 38:
                status = "–°–µ–π—á–∞—Å –∂–∞—Ä–∫–æ!"
            else:
                status = "–°–µ–π—á–∞—Å –æ—Ç–ª–∏—á–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞!"

            bot.send_message(message.chat.id, "üèò–í –≥–æ—Ä–æ–¥–µ " + str(weather["name"]) + " —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ " + str(
                float(weather["main"]['temp'])) + "\n" +
                             "üå°–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ " + str(float(weather['main']['temp_max'])) + "\n" +
                             "ü•∂–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ " + str(float(weather['main']['temp_min'])) + "\n" +
                             "üí®–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞" + str(float(weather['wind']['speed'])) + "\n" +
                             "üóø–î–∞–≤–ª–µ–Ω–∏–µ " + str(float(weather['main']['pressure'])) + "\n" +
                             "üí¶–í–ª–∞–∂–Ω–æ—Å—Ç—å" + str(int(weather['main']['humidity'])) + "%" + "\n" +
                             "üëÄ–í–∏–¥–∏–º–æ—Å—Ç—å" + str(weather['visibility']) + "\n" +
                             "–û–ø–∏—Å–∞–Ω–∏–µ " + str(weather['weather'][0]["description"]) + "\n\n" + status)
        except:
            bot.send_message(message.chat.id, "–¢—ã —Ç–æ—á–Ω–æ —Å —ç—Ç–æ–π –ø–ª–∞–Ω–µ—Ç—ã?")
    elif message.text == '–ú–æ—Å–∫–≤–∞':
        city_name = '–ú–æ—Å–∫–≤–∞'
        try:
            params = {'APPID': api_weather, 'q': city_name, 'units': 'metric', 'lang': 'ru'}
            result = requests.get(url, params=params)
            weather = result.json()

            if weather["main"]['temp'] < 10:
                status = "–°–µ–π—á–∞—Å —Ö–æ–ª–æ–¥–Ω–æ!"
            elif weather["main"]['temp'] < 20:
                status = "–°–µ–π—á–∞—Å –ø—Ä–æ—Ö–ª–∞–¥–Ω–æ!"
            elif weather["main"]['temp'] > 38:
                status = "–°–µ–π—á–∞—Å –∂–∞—Ä–∫–æ!"
            else:
                status = "–°–µ–π—á–∞—Å –æ—Ç–ª–∏—á–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞!"

            bot.send_message(message.chat.id, "üèò–í –≥–æ—Ä–æ–¥–µ " + str(weather["name"]) + " —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ " + str(
                float(weather["main"]['temp'])) + "\n" +
                             "üå°–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ " + str(float(weather['main']['temp_max'])) + "\n" +
                             "ü•∂–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ " + str(float(weather['main']['temp_min'])) + "\n" +
                             "üí®–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞" + str(float(weather['wind']['speed'])) + "\n" +
                             "üóø–î–∞–≤–ª–µ–Ω–∏–µ " + str(float(weather['main']['pressure'])) + "\n" +
                             "üí¶–í–ª–∞–∂–Ω–æ—Å—Ç—å" + str(int(weather['main']['humidity'])) + "%" + "\n" +
                             "üëÄ–í–∏–¥–∏–º–æ—Å—Ç—å" + str(weather['visibility']) + "\n" +
                             "–û–ø–∏—Å–∞–Ω–∏–µ " + str(weather['weather'][0]["description"]) + "\n\n" + status)
        except:
            bot.send_message(message.chat.id, "—Ç—ã —Ç–æ—á–Ω–æ —Å —ç—Ç–æ–π –ø–ª–∞–Ω–µ—Ç—ã?")
    if message.text == '–û–∂–µ—Ä–µ–ª—å–µ':
        city_name = '–û–∂–µ—Ä–µ–ª—å–µ'
        try:
                params = {'APPID': api_weather, 'q': city_name, 'units': 'metric', 'lang': 'ru'}
                result = requests.get(url, params=params)
                weather = result.json()

                if weather["main"]['temp'] < 10:
                    status = "–°–µ–π—á–∞—Å —Ö–æ–ª–æ–¥–Ω–æ!"
                elif weather["main"]['temp'] < 20:
                    status = "–°–µ–π—á–∞—Å –ø—Ä–æ—Ö–ª–∞–¥–Ω–æ!"
                elif weather["main"]['temp'] > 38:
                    status = "–°–µ–π—á–∞—Å –∂–∞—Ä–∫–æ!"
                else:
                    status = "–°–µ–π—á–∞—Å –æ—Ç–ª–∏—á–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞!"

                bot.send_message(message.chat.id, "üèò–í –≥–æ—Ä–æ–¥–µ " + str(weather["name"]) + " —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ " + str(
                    float(weather["main"]['temp'])) + "\n" +
                                "üå°–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ " + str(float(weather['main']['temp_max'])) + "\n" +
                                "ü•∂–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ " + str(float(weather['main']['temp_min'])) + "\n" +
                                "üí®–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞" + str(float(weather['wind']['speed'])) + "\n" +
                                "üóø–î–∞–≤–ª–µ–Ω–∏–µ " + str(float(weather['main']['pressure'])) + "\n" +
                                "üí¶–í–ª–∞–∂–Ω–æ—Å—Ç—å" + str(int(weather['main']['humidity'])) + "%" + "\n" +
                                "üëÄ–í–∏–¥–∏–º–æ—Å—Ç—å" + str(weather['visibility']) + "\n" +
                                "–û–ø–∏—Å–∞–Ω–∏–µ " + str(weather['weather'][0]["description"]) + "\n\n" + status)
        except:
            bot.send_message(message.chat.id, "—Ç—ã —Ç–æ—á–Ω–æ —Å —ç—Ç–æ–π –ø–ª–∞–Ω–µ—Ç—ã?")



bot.polling(none_stop=True)

